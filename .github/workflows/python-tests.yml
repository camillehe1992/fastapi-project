name: Python Tests

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/python-tests.yml
      - app/**
      - tests/**
      - requirements-dev.txt
      - requirements.txt
      - pytest.ini
  workflow_dispatch:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run unit tests with coverage
        run: |
          pytest --cov=app --cov-report=xml:.coverage.unit tests/unit/
          pwd
          ls -la .coverage.unit  # Confirm the file is generated

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage
          path: .coverage.unit

      - name: Output unit test report to job summary
        run: |
          echo "### Unit Test Report" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          pytest --cov=app --cov-report=term tests/unit/ >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run integration tests with coverage
        run: |
          pytest --cov=app --cov-report=xml:.coverage.integration tests/integration/
          pwd

      - name: Upload integration test coverage
        uses: actions/upload-artifact@v4
        with:
          name: integration-coverage
          path: .coverage.integration

      - name: Output integration test report to job summary
        run: |
          echo "### Integration Test Report" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          pytest --cov=app --cov-report=term tests/integration/ >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
