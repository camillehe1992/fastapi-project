name: Python Tests

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/python-tests.yml
      - app/**
      - tests/**
      - requirements-dev.txt
      - requirements.txt
      - pytest.ini
  workflow_dispatch:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11" # Replace with your Python version (e.g., 3.11, 3.12)

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: venv
          key: venv-${{ runner.os }}-${{ github.run_id }}-${{ github.ref }}-v1-${{ hashFiles('requirements-dev.txt') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run unit tests with coverage
        run: |
          pytest --cov=./ --cov-report=xml:.coverage.unit tests/unit/

          ls -la .coverage.unit  # Confirm the file is generated

      - name: Debug working directory
        run: |
          find . -name ".coverage.unit"

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage
          path: .coverage.unit

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: venv
          key: venv-${{ runner.os }}-${{ github.run_id }}-${{ github.ref }}-v1-${{ hashFiles('requirements-dev.txt') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run integration tests with coverage
        run: |
          pytest --cov=./ --cov-report=xml:.coverage.integration tests/integration/

      - name: Upload integration test coverage
        uses: actions/upload-artifact@v4
        with:
          name: integration-coverage
          path: .coverage.integration

  combine-coverage:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install pytest-cov

      - name: Download unit test coverage
        uses: actions/download-artifact@v4
        with:
          name: unit-coverage
          path: ./

      - name: Download integration test coverage
        uses: actions/download-artifact@v4
        with:
          name: integration-coverage
          path: ./

      - name: Combine coverage reports
        run: |
          coverage combine .coverage.unit .coverage.integration
          coverage xml -o .coverage.combined

      - name: Output coverage to GitHub Summary
        run: |
          echo "### Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "Combined coverage report generated." >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          coverage report >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY

      - name: Upload combined coverage report
        uses: actions/upload-artifact@v3
        with:
          name: combined-coverage
          path: .coverage.combined
